package com.javarush.games.game2048;

import com.javarush.engine.cell.*;

/**
 * Игра 2048
 * <p>
 * Правила игры:
 * <p>
 * Игровое поле имеет форму квадрата. Размер стандартного поля — 4x4 плитки. Цель игры — получить плитку номиналом 2048.
 * <p>
 * 1. В каждом раунде появляется плитка номиналом 2 (с вероятностью 90%) или 4 (с вероятностью 10%).
 * 2. Можно сдвинуть все плитки игрового поля в одну из 4 сторон, нажав соответствующую клавишу:
 * вверх, вниз, вправо или влево. Если при сдвиге две плитки одного номинала "налетают" друг на друга,
 * они "слипаются" в одну. Ее номинал равен сумме соединившихся плиток. После каждого хода на свободной
 * секции поля появляется новая плитка номиналом 2 или 4. Если при нажатии клавиши местоположение плиток
 * или их номинал не изменится, ход не совершается.
 * 3. Если в одной строчке или столбце находится более двух плиток одного номинала, при сбрасывании они слипаются
 * с той стороны, в которую были направлены. Например, находящиеся в одной строке плитки (4, 4, 4, 0) после
 * хода влево превратятся в (8, 4, 0, 0), а после хода вправо — в (0, 0, 4, 8).
 * Данная обработка неоднозначности позволяет более точно формировать стратегию игры.
 * 4. За каждое соединение игровые очки увеличиваются на номинал получившейся плитки.
 * 5. Игра заканчивается поражением, если после очередного хода невозможно совершить действие.
 * 6. Игра заканчивается победой, если на поле появится клетка номиналом 2048.
 * <p>
 * Для сборки необходимо установить VM options:
 * --module-path "C:\Projects\java\JavaRushTasks\lib\javafx-sdk-18.0.1\lib" --add-modules javafx.controls,javafx.fxml
 */
public class Game2048 extends Game {
    private static final int SIDE = 4;
    private int[][] gameField = new int[4][4];

    @Override
    public void initialize() {
        setScreenSize(SIDE, SIDE);
        createGame();
        drawScene();
    }

    private void createGame() {
        createNewNumber();
        createNewNumber();
    }

    private void drawScene() {
        for (int x = 0; x < SIDE; x++)
            for (int y = 0; y < SIDE; y++) {
                setCellColor(x, y, Color.LIGHTGRAY);
            }
    }

    private void createNewNumber() {
        int x, y;
        do {
            x = getRandomNumber(SIDE);
            y = getRandomNumber(SIDE);
        } while (gameField[y][x] != 0);
        if (getRandomNumber(10) == 9) {
            gameField[y][x] = 4;
        } else {
            gameField[y][x] = 2;
        }
    }

}
